use super::addres_mode::AddresMode;
use super::opcode::Opcode;
use super::Cpu6502;

#[derive(Copy, Clone)]
pub struct Instruct(Opcode, AddresMode, u8);

#[derive(Debug, Clone)]
pub struct Instruction {
    pub opcode: Opcode,
    pub addres_mode: AddresMode,
    pub cycles: u8,
}

impl Instruction {
    fn xxx() -> Instruction {
        Instruction {
            opcode: Opcode::XXX,
            addres_mode: AddresMode::IMP,
            cycles: 2,
        }
    }
}

impl Instruct {
    fn get(&self) -> Instruction {
        Instruction {
            opcode: self.0,
            addres_mode: self.1,
            cycles: self.2,
        }
    }
}

// Tabela de instruções de 16x16 com 256 instruções
const LIST: [Instruct; 256] = [
    Instruct(Opcode::BRK, AddresMode::IMM, 7),
    Instruct(Opcode::ORA, AddresMode::IZX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 3),
    Instruct(Opcode::ORA, AddresMode::ZP0, 3),
    Instruct(Opcode::ASL, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::PHP, AddresMode::IMP, 3),
    Instruct(Opcode::ORA, AddresMode::IMM, 2),
    Instruct(Opcode::ASL, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::ORA, AddresMode::ABS, 4),
    Instruct(Opcode::ASL, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BPL, AddresMode::REL, 2),
    Instruct(Opcode::ORA, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::ORA, AddresMode::ZPX, 4),
    Instruct(Opcode::ASL, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::CLC, AddresMode::IMP, 2),
    Instruct(Opcode::ORA, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::ORA, AddresMode::ABX, 4),
    Instruct(Opcode::ASL, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::JSR, AddresMode::ABS, 6),
    Instruct(Opcode::AND, AddresMode::IZX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::BIT, AddresMode::ZP0, 3),
    Instruct(Opcode::AND, AddresMode::ZP0, 3),
    Instruct(Opcode::ROL, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::PLP, AddresMode::IMP, 4),
    Instruct(Opcode::AND, AddresMode::IMM, 2),
    Instruct(Opcode::ROL, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::BIT, AddresMode::ABS, 4),
    Instruct(Opcode::AND, AddresMode::ABS, 4),
    Instruct(Opcode::ROL, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BMI, AddresMode::REL, 2),
    Instruct(Opcode::AND, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::AND, AddresMode::ZPX, 4),
    Instruct(Opcode::ROL, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::SEC, AddresMode::IMP, 2),
    Instruct(Opcode::AND, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::AND, AddresMode::ABX, 4),
    Instruct(Opcode::ROL, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::RTI, AddresMode::IMP, 6),
    Instruct(Opcode::EOR, AddresMode::IZX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 3),
    Instruct(Opcode::EOR, AddresMode::ZP0, 3),
    Instruct(Opcode::LSR, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::PHA, AddresMode::IMP, 3),
    Instruct(Opcode::EOR, AddresMode::IMM, 2),
    Instruct(Opcode::LSR, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::JMP, AddresMode::ABS, 3),
    Instruct(Opcode::EOR, AddresMode::ABS, 4),
    Instruct(Opcode::LSR, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BVC, AddresMode::REL, 2),
    Instruct(Opcode::EOR, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::EOR, AddresMode::ZPX, 4),
    Instruct(Opcode::LSR, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::CLI, AddresMode::IMP, 2),
    Instruct(Opcode::EOR, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::EOR, AddresMode::ABX, 4),
    Instruct(Opcode::LSR, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::RTS, AddresMode::IMP, 6),
    Instruct(Opcode::ADC, AddresMode::IZX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 3),
    Instruct(Opcode::ADC, AddresMode::ZP0, 3),
    Instruct(Opcode::ROR, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::PLA, AddresMode::IMP, 4),
    Instruct(Opcode::ADC, AddresMode::IMM, 2),
    Instruct(Opcode::ROR, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::JMP, AddresMode::IND, 5),
    Instruct(Opcode::ADC, AddresMode::ABS, 4),
    Instruct(Opcode::ROR, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BVS, AddresMode::REL, 2),
    Instruct(Opcode::ADC, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::ADC, AddresMode::ZPX, 4),
    Instruct(Opcode::ROR, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::SEI, AddresMode::IMP, 2),
    Instruct(Opcode::ADC, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::ADC, AddresMode::ABX, 4),
    Instruct(Opcode::ROR, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::STA, AddresMode::IZX, 6),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::STY, AddresMode::ZP0, 3),
    Instruct(Opcode::STA, AddresMode::ZP0, 3),
    Instruct(Opcode::STX, AddresMode::ZP0, 3),
    Instruct(Opcode::XXX, AddresMode::IMP, 3),
    Instruct(Opcode::DEY, AddresMode::IMP, 2),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::TXA, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::STY, AddresMode::ABS, 4),
    Instruct(Opcode::STA, AddresMode::ABS, 4),
    Instruct(Opcode::STX, AddresMode::ABS, 4),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::BCC, AddresMode::REL, 2),
    Instruct(Opcode::STA, AddresMode::IZY, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::STY, AddresMode::ZPX, 4),
    Instruct(Opcode::STA, AddresMode::ZPX, 4),
    Instruct(Opcode::STX, AddresMode::ZPY, 4),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::TYA, AddresMode::IMP, 2),
    Instruct(Opcode::STA, AddresMode::ABY, 5),
    Instruct(Opcode::TXS, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::NOP, AddresMode::IMP, 5),
    Instruct(Opcode::STA, AddresMode::ABX, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::LDY, AddresMode::IMM, 2),
    Instruct(Opcode::LDA, AddresMode::IZX, 6),
    Instruct(Opcode::LDX, AddresMode::IMM, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::LDY, AddresMode::ZP0, 3),
    Instruct(Opcode::LDA, AddresMode::ZP0, 3),
    Instruct(Opcode::LDX, AddresMode::ZP0, 3),
    Instruct(Opcode::XXX, AddresMode::IMP, 3),
    Instruct(Opcode::TAY, AddresMode::IMP, 2),
    Instruct(Opcode::LDA, AddresMode::IMM, 2),
    Instruct(Opcode::TAX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::LDY, AddresMode::ABS, 4),
    Instruct(Opcode::LDA, AddresMode::ABS, 4),
    Instruct(Opcode::LDX, AddresMode::ABS, 4),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::BCS, AddresMode::REL, 2),
    Instruct(Opcode::LDA, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::LDY, AddresMode::ZPX, 4),
    Instruct(Opcode::LDA, AddresMode::ZPX, 4),
    Instruct(Opcode::LDX, AddresMode::ZPY, 4),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::CLV, AddresMode::IMP, 2),
    Instruct(Opcode::LDA, AddresMode::ABY, 4),
    Instruct(Opcode::TSX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::LDY, AddresMode::ABX, 4),
    Instruct(Opcode::LDA, AddresMode::ABX, 4),
    Instruct(Opcode::LDX, AddresMode::ABY, 4),
    Instruct(Opcode::XXX, AddresMode::IMP, 4),
    Instruct(Opcode::CPY, AddresMode::IMM, 2),
    Instruct(Opcode::CMP, AddresMode::IZX, 6),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::CPY, AddresMode::ZP0, 3),
    Instruct(Opcode::CMP, AddresMode::ZP0, 3),
    Instruct(Opcode::DEC, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::INY, AddresMode::IMP, 2),
    Instruct(Opcode::CMP, AddresMode::IMM, 2),
    Instruct(Opcode::DEX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::CPY, AddresMode::ABS, 4),
    Instruct(Opcode::CMP, AddresMode::ABS, 4),
    Instruct(Opcode::DEC, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BNE, AddresMode::REL, 2),
    Instruct(Opcode::CMP, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::CMP, AddresMode::ZPX, 4),
    Instruct(Opcode::DEC, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::CLD, AddresMode::IMP, 2),
    Instruct(Opcode::CMP, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::CMP, AddresMode::ABX, 4),
    Instruct(Opcode::DEC, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::CPX, AddresMode::IMM, 2),
    Instruct(Opcode::SBC, AddresMode::IZX, 6),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::CPX, AddresMode::ZP0, 3),
    Instruct(Opcode::SBC, AddresMode::ZP0, 3),
    Instruct(Opcode::INC, AddresMode::ZP0, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 5),
    Instruct(Opcode::INX, AddresMode::IMP, 2),
    Instruct(Opcode::SBC, AddresMode::IMM, 2),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::SBC, AddresMode::IMP, 2),
    Instruct(Opcode::CPX, AddresMode::ABS, 4),
    Instruct(Opcode::SBC, AddresMode::ABS, 4),
    Instruct(Opcode::INC, AddresMode::ABS, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::BEQ, AddresMode::REL, 2),
    Instruct(Opcode::SBC, AddresMode::IZY, 5),
    Instruct(Opcode::XXX, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 8),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::SBC, AddresMode::ZPX, 4),
    Instruct(Opcode::INC, AddresMode::ZPX, 6),
    Instruct(Opcode::XXX, AddresMode::IMP, 6),
    Instruct(Opcode::SED, AddresMode::IMP, 2),
    Instruct(Opcode::SBC, AddresMode::ABY, 4),
    Instruct(Opcode::NOP, AddresMode::IMP, 2),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
    Instruct(Opcode::NOP, AddresMode::IMP, 4),
    Instruct(Opcode::SBC, AddresMode::ABX, 4),
    Instruct(Opcode::INC, AddresMode::ABX, 7),
    Instruct(Opcode::XXX, AddresMode::IMP, 7),
];

pub fn get_instruction_by_id(opcode: u8) -> Instruction {
    let result = &LIST[opcode as usize];

    result.get()
}

impl Cpu6502 {
    pub fn get_instruction(&self) -> Instruction {
        get_instruction_by_id(self.opcode)
    }

    /** This function sources the data used by the instruction into
        a convenient numeric variable. Some instructions dont have to
        fetch data as the source is implied by the instruction. For example
        "INX" increments the X register. There is no additional data
        required. For all other addressing modes, the data resides at
        the location held within addr_abs, so it is read from there.
        Immediate adress mode exploits this slightly, as that has
        set addr_abs = pc + 1, so it fetches the data from the
        next byte for example "LDA $FF" just loads the accumulator with
        256, i.e. no far reaching memory fetch is required. "fetched"
        is a variable global to the CPU, and is set by cal
    */
    pub fn fetch(&mut self) -> u8 {
        if AddresMode::IMP != self.get_instruction().addres_mode {
            self.fetched = self.read(self.addr_abs);
        }

        self.fetched
    }
}
